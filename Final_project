print("Welcome to the control room of the Airport")

import random
class ArrayQueue:

    def __init__(self):
        self._data = [None]
        self._size = 0
        self._front = 0

    def __len__(self):
        return self._size

    def is_empty(self):
        return self._size == 0

    def first(self):
        if self.is_empty():
            raise Exception("Queue is empty")
        return self._data[self._front]

    def dequeue(self):
        if self.is_empty():
            raise Exception("Queue is empty")
        answer = self._data[self._front]
        self._data[self._front] = None
        self._front = (self._front + 1) % len(self._data)
        self._size -= 1
        return answer

    def enqueue(self, e):
        if self._size == len(self._data):
            self._resize(2 * len(self._data))
        avail = (self._front + self._size) % len(self._data)
        self._data[avail] = e
        self._size += 1

    def _resize(self, cap):
        old = self._data
        self._data = [None] * cap
        walk = self._front
        for k in range(self._size):
            self._data[k] = old[walk]
            walk = (1 + walk)%len(old)
        self._front = 0
def planes():
    x=random.randint(0,10)
    y=random.randint(0,10)
    z=random.randint(0,10)
    xyz=str(x)+str(y)+str(z)
    return(xyz)

def main():
    Landing=ArrayQueue()
    Takeoff= ArrayQueue()
    runway=[]   
    landingtime=0
    takeofftime=0
    total_waiting_time_for_landing=0
    total_waiting_time_for_takeoff=0
    takeoff_length_total = 0
    landing_length_total = 0
    minute=60

    for i in range(168):
        landing_rate= random.randint(0,30)
        takeoff_rate= random.randint(0,30)
        for x in range(60):
            random_number= random.random()
            random_number1= random.random()
            if random_number<landing_rate/60:
                a=planes()
                Landing.enqueue(a)
                runway.append(a)
                time_took_for_landing=random.randint(1,3)
                landingtime+=time_took_for_landing
                total_waiting_time_for_landing+=landingtime
                

            elif random_number1<takeoff_rate/60:
                b=planes()
                Takeoff.enqueue(b)
                runway.append(b)
                time_for_takeoff=random.randint(1,3)
                takeofftime+=time_for_takeoff
                total_waiting_time_for_takeoff+=takeofftime
            else:
                runway.append('')
                



     
            for q in runway:    
                if q=='' and Landing.is_empty()==False:
                    landing_length_total += Landing.__len__()
                    q=Landing.dequeue()
                    time_took_for_landing=random.randint(1,3)
                    landingtime+=time_took_for_landing
                    total_waiting_time_for_landing+=landingtime
                  
                if Landing.is_empty() and q=='' and Takeoff.is_empty() == False:
                    takeoff_length_total += Takeoff.__len__()
                    q=Takeoff.dequeue()
                    time_for_takeoff=random.randint(1,3)
                    takeofftime+=time_for_takeoff
                    total_waiting_time_for_takeoff+=takeofftime
                    
                                
           
         
    print("The average time a plane spends in the takeoff queue is :",(total_waiting_time_for_takeoff)/(takeoff_length_total))
    print("The average time a plane spends in the landing queue is :",(total_waiting_time_for_landing)/(landing_length_total))
    print("The average length of the landing queue is :",landing_length_total/10080)
    print("The average length of the take_off queue is :",takeoff_length_total/10080)

    
   



main()   

